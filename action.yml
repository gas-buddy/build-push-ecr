name: "Build and Publish to ECR"
description: "Builds and Pushes built artifacts to ECT"

inputs:
  npm-token:
    description: "npm credentials, most useful for private repositories"
    required: true
  node-env:
    description: "The NODE_ENV value for the image, defaults to production"
    required: false
  image-tag:
    description: "The desired tag for the Docker image"
    required: false
    default: ${{ github.run_id }}_${{ github.sha }}
  registry-name:
    description: "The name of the ECR registry repository"
    required: true
  aws-access-key-id:
    description: "AWS account id for image registry"
    required: true
  aws-secret-access-key:
    description: "AWS Secret for the access key"
    required: true
  aws-region:
    description: "AWS region for the image registry"
    required: false
    default: us-east-1
  skip-build:
    description: "Set to true if the Docker image is already built earlier in the workflow"
    required: false
    default: false

runs:
  using: "composite"
  steps:
    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{inputs.aws-access-key-id}}
        aws-secret-access-key: ${{inputs.aws-secret-access-key}}
        aws-region: ${{inputs.aws-region}}

    - name: Display AWS caller identity
      run: aws sts get-caller-identity
      shell: bash

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build docker image ${{inputs.registry-name}}:${{inputs.image-tag}}
      shell: bash
      run: |
        cp ${{github.action_path}}/Dockerfile .
        docker build --build-arg NODE_ENV_ARG=${{inputs.node-env}} -t ${{inputs.registry-name}}:${{inputs.image-tag}} .
      if: ${{ inputs.skip-build != 'true' }}

    - name: Push docker image to ECR
      shell: bash
      run: |
        docker tag ${{inputs.registry-name}}:${{inputs.image-tag}} ${{steps.login-ecr.outputs.registry}}/${{inputs.registry-name}}:${{inputs.image-tag}}
        docker push ${{ steps.login-ecr.outputs.registry }}/${{inputs.registry-name}}:${{inputs.image-tag}}

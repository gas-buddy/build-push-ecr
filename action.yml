name: "Build and Publish to ECR"
description: "Builds and Pushes built artifacts to ECT"

inputs:
  npm-token:
    description: "Token for private npm repo"
    required: true
  image-tag:
    description: "Image tag"
    required: false
    default: ${{ github.run_id }}_${{ github.sha }}
  registry-name:
    description: "Name of the ECR registry"
    required: true
  aws-access-key-id:
    description: "Username for image registry"
    required: true
  aws-secret-access-key:
    description: "Password for image registry"
    required: true

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v2
    - name: Use Node.js 12.x
      uses: actions/setup-node@v2
      with:
        node-version: '12.x'

    - name: npm install
      shell: bash
      run: |
        npm config set '//registry.npmjs.org/:_authToken' "${NPM_TOKEN}"
        npm install
      env:
        NPM_TOKEN: ${{inputs.npm-token}}

    - name: Run build
      shell: bash
      run: npm run build

    - name: Build swagger client
      shell: bash
      run: npm run swagger-pack

    - name: Copy docker file from action to caller job
      shell: bash
      run: cp ${{github.action_path}}/Dockerfile .

    - name: Build docker image
      shell: bash
      run: docker build -t ${{inputs.registry-name}}:${{inputs.image-tag}} .

    - name: Configure AWS Stage credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{inputs.aws-access-key-id}}
        aws-secret-access-key: ${{inputs.aws-secret-access-key}}
        aws-region: us-east-1

    - name: Login to Amazon Stage ECR
      id: login-ecr-stage
      uses: aws-actions/amazon-ecr-login@v1

    - name: Push to stage
      shell: bash
      run: |
        docker tag ${{inputs.registry-name}}:${{inputs.image-tag}} ${{steps.login-ecr-stage.outputs.registry}}/${{inputs.registry-name}}:${{inputs.image-tag}}
        docker push ${{ steps.login-ecr-stage.outputs.registry }}/${{inputs.registry-name}}:${{inputs.image-tag}}
